server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: ecom-api-gateway-service
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE # 유레카에 등록된 이름을 기재
          predicates:
            - Path=/user-service/** # 해당 URI가 포함되면 user-service로 포워딩
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
        - id: ecom-first-service
          uri: lb://ECOM-FIRST-SERVICE
          predicates:
            # http://localhost:8081/ecom-first-service/**
            - Path=/ecom-first-service/**
          filters:
#            - AddRequestHeader=[Key], [Value]
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
            - CustomFilter
        - id: ecom-second-service
          uri: lb://ECOM-SECOND-SERVICE
          predicates:
            # http://localhost:8081/ecom-second-service/**
            - Path=/ecom-second-service/**
          filters:
#            - AddRequestHeader=[Key], [Value]
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi, Logging Filter
                preLogger: true
                postLogger: true
      # Test : http://localhost:8000/ecom-second-service/check
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true